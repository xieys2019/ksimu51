# Makefile.in generated by automake 1.7.9 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
include_x11_FALSE = @include_x11_FALSE@
include_x11_TRUE = @include_x11_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = $(all_includes)
#>- METASOURCES = AUTO
SUBDIRS = atmelW intelW maximW philipsW texasInstrumentsW
noinst_LTLIBRARIES = libprocessorsW.la
noinst_HEADERS = AssemblerSourceW.h BitAddressableAreaW.h BitChangeBreakpoint.h \
	DisassembleW.h ExternalW.h I51BaseADConverterW.h I51BaseInternalFLASHW.h \
	I51BaseInternalIRAMW.h I51BaseInternalROMW.h I51BaseInternalXRAMW.h I51BaseTimer2W.h \
	I51BaseW.h IOPortPin.h InternalRAMW.h InternalXRAMW.h MiscW.h ProcessorsWC.h \
	ProcessorsWLib.h RegisterBankAreaW.h RegsW.h RomW.h SFRBitW.h SfrW.h

libprocessorsW_la_SOURCES = AssemblerSourceW.cpp BitAddressableAreaW.cpp \
	BitChangeBreakpoint.cpp DisassembleW.cpp ExternalW.cpp I51BaseADConverterW.cpp \
	I51BaseInternalFLASHW.cpp I51BaseInternalIRAMW.cpp I51BaseInternalROMW.cpp \
	I51BaseInternalXRAMW.cpp I51BaseTimer2W.cpp I51BaseW.cpp IOPortPin.cpp InternalRAMW.cpp \
	InternalXRAMW.cpp MiscW.cpp ProcessorsWC.cpp ProcessorsWLib.cpp RegisterBankAreaW.cpp \
	RegsW.cpp RomW.cpp SFRBitW.cpp SfrW.cpp

libprocessorsW_la_LIBADD = $(top_builddir)/src/share/libShare.la \
	$(top_builddir)/src/processors/libBaseProcessors.la $(top_builddir)/src/processorsW/atmelW/libatmelW.la \
	$(top_builddir)/src/processorsW/intelW/libintelW.la $(top_builddir)/src/processorsW/maximW/libmaximW.la \
	$(top_builddir)/src/processorsW/philipsW/libphilipsW.la \
	$(top_builddir)/src/processorsW/texasInstrumentsW/libtexasInstrumentsW.la $(top_builddir)/src/components/libBaseComponents.la \
	$(top_builddir)/src/processors/Maxim/libMaximProcessors.la $(top_builddir)/src/processors/Atmel/libAtmelProcessors.la \
	$(top_builddir)/src/components/misc/libmiscComponents.la $(top_builddir)/src/components/memory/libMemory.la \
	$(top_builddir)/src/components/logicGALPAL/liblogiGALPAL.la $(top_builddir)/src/components/logic74/libLogic74.la \
	$(top_builddir)/src/components/keysButtons/libKeysButtons.la $(top_builddir)/src/components/instruments/libInstruments.la \
	$(top_builddir)/src/components/displays/Maxim/libDisplaysMaxim.la $(top_builddir)/src/components/displays/Hitachi/libDisplaysHitachi.la \
	$(top_builddir)/src/components/displays/libdisplays.la

subdir = src/processorsW
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libprocessorsW_la_LDFLAGS =
libprocessorsW_la_DEPENDENCIES = $(top_builddir)/src/share/libShare.la \
	$(top_builddir)/src/processors/libBaseProcessors.la \
	$(top_builddir)/src/processorsW/atmelW/libatmelW.la \
	$(top_builddir)/src/processorsW/intelW/libintelW.la \
	$(top_builddir)/src/processorsW/maximW/libmaximW.la \
	$(top_builddir)/src/processorsW/philipsW/libphilipsW.la \
	$(top_builddir)/src/processorsW/texasInstrumentsW/libtexasInstrumentsW.la \
	$(top_builddir)/src/components/libBaseComponents.la \
	$(top_builddir)/src/processors/Maxim/libMaximProcessors.la \
	$(top_builddir)/src/processors/Atmel/libAtmelProcessors.la \
	$(top_builddir)/src/components/misc/libmiscComponents.la \
	$(top_builddir)/src/components/memory/libMemory.la \
	$(top_builddir)/src/components/logicGALPAL/liblogiGALPAL.la \
	$(top_builddir)/src/components/logic74/libLogic74.la \
	$(top_builddir)/src/components/keysButtons/libKeysButtons.la \
	$(top_builddir)/src/components/instruments/libInstruments.la \
	$(top_builddir)/src/components/displays/Maxim/libDisplaysMaxim.la \
	$(top_builddir)/src/components/displays/Hitachi/libDisplaysHitachi.la \
	$(top_builddir)/src/components/displays/libdisplays.la
am_libprocessorsW_la_OBJECTS = AssemblerSourceW.lo \
	BitAddressableAreaW.lo BitChangeBreakpoint.lo DisassembleW.lo \
	ExternalW.lo I51BaseADConverterW.lo I51BaseInternalFLASHW.lo \
	I51BaseInternalIRAMW.lo I51BaseInternalROMW.lo \
	I51BaseInternalXRAMW.lo I51BaseTimer2W.lo I51BaseW.lo \
	IOPortPin.lo InternalRAMW.lo InternalXRAMW.lo MiscW.lo \
	ProcessorsWC.lo ProcessorsWLib.lo RegisterBankAreaW.lo RegsW.lo \
	RomW.lo SFRBitW.lo SfrW.lo
#>- libprocessorsW_la_OBJECTS = $(am_libprocessorsW_la_OBJECTS)
#>+ 12
libprocessorsW_la_final_OBJECTS = libprocessorsW_la.all_cpp.lo 
libprocessorsW_la_nofinal_OBJECTS = AssemblerSourceW.lo \
	BitAddressableAreaW.lo BitChangeBreakpoint.lo DisassembleW.lo \
	ExternalW.lo I51BaseADConverterW.lo I51BaseInternalFLASHW.lo \
	I51BaseInternalIRAMW.lo I51BaseInternalROMW.lo \
	I51BaseInternalXRAMW.lo I51BaseTimer2W.lo I51BaseW.lo \
	IOPortPin.lo InternalRAMW.lo InternalXRAMW.lo MiscW.lo \
	ProcessorsWC.lo ProcessorsWLib.lo RegisterBankAreaW.lo RegsW.lo \
	RomW.lo SFRBitW.lo SfrW.lo\
I51BaseADConverterW.moc.lo SfrW.moc.lo ProcessorsWLib.moc.lo RomW.moc.lo I51BaseInternalIRAMW.moc.lo MiscW.moc.lo I51BaseInternalFLASHW.moc.lo RegsW.moc.lo DisassembleW.moc.lo I51BaseInternalXRAMW.moc.lo I51BaseW.moc.lo InternalRAMW.moc.lo I51BaseInternalROMW.moc.lo InternalXRAMW.moc.lo BitAddressableAreaW.moc.lo SFRBitW.moc.lo AssemblerSourceW.moc.lo ExternalW.moc.lo I51BaseTimer2W.moc.lo RegisterBankAreaW.moc.lo 
@KDE_USE_FINAL_FALSE@libprocessorsW_la_OBJECTS = $(libprocessorsW_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libprocessorsW_la_OBJECTS = $(libprocessorsW_la_final_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/AssemblerSourceW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/BitAddressableAreaW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/BitChangeBreakpoint.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/DisassembleW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/ExternalW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/I51BaseADConverterW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalFLASHW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalIRAMW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalROMW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalXRAMW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/I51BaseTimer2W.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/I51BaseW.Plo ./$(DEPDIR)/IOPortPin.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/InternalRAMW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/InternalXRAMW.Plo ./$(DEPDIR)/MiscW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/ProcessorsWC.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/ProcessorsWLib.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/RegisterBankAreaW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/RegsW.Plo ./$(DEPDIR)/RomW.Plo \
#>- @AMDEP_TRUE@	./$(DEPDIR)/SFRBitW.Plo ./$(DEPDIR)/SfrW.Plo
#>+ 38
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/I51BaseADConverterW.moc.P $(DEPDIR)/SfrW.moc.P $(DEPDIR)/ProcessorsWLib.moc.P $(DEPDIR)/RomW.moc.P $(DEPDIR)/I51BaseInternalIRAMW.moc.P $(DEPDIR)/MiscW.moc.P $(DEPDIR)/I51BaseInternalFLASHW.moc.P $(DEPDIR)/RegsW.moc.P $(DEPDIR)/DisassembleW.moc.P $(DEPDIR)/I51BaseInternalXRAMW.moc.P $(DEPDIR)/I51BaseW.moc.P $(DEPDIR)/InternalRAMW.moc.P $(DEPDIR)/I51BaseInternalROMW.moc.P $(DEPDIR)/BitAddressableAreaW.moc.P $(DEPDIR)/SFRBitW.moc.P $(DEPDIR)/AssemblerSourceW.moc.P $(DEPDIR)/ExternalW.moc.P $(DEPDIR)/I51BaseTimer2W.moc.P $(DEPDIR)/RegisterBankAreaW.moc.P  $(DEPDIR)/libprocessorsW_la.all_cpp.P ./$(DEPDIR)/AssemblerSourceW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/BitAddressableAreaW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/BitChangeBreakpoint.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/DisassembleW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/ExternalW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseADConverterW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalFLASHW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalIRAMW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalROMW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalXRAMW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseTimer2W.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseW.Plo ./$(DEPDIR)/IOPortPin.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/InternalRAMW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/InternalXRAMW.Plo ./$(DEPDIR)/MiscW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/ProcessorsWC.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/ProcessorsWLib.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/RegisterBankAreaW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/RegsW.Plo ./$(DEPDIR)/RomW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/SFRBitW.Plo ./$(DEPDIR)/SfrW.Plo
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/I51BaseADConverterW.moc.P $(DEPDIR)/SfrW.moc.P $(DEPDIR)/ProcessorsWLib.moc.P $(DEPDIR)/RomW.moc.P $(DEPDIR)/I51BaseInternalIRAMW.moc.P $(DEPDIR)/MiscW.moc.P $(DEPDIR)/I51BaseInternalFLASHW.moc.P $(DEPDIR)/RegsW.moc.P $(DEPDIR)/DisassembleW.moc.P $(DEPDIR)/I51BaseInternalXRAMW.moc.P $(DEPDIR)/I51BaseW.moc.P $(DEPDIR)/InternalRAMW.moc.P $(DEPDIR)/I51BaseInternalROMW.moc.P $(DEPDIR)/BitAddressableAreaW.moc.P $(DEPDIR)/SFRBitW.moc.P $(DEPDIR)/AssemblerSourceW.moc.P $(DEPDIR)/ExternalW.moc.P $(DEPDIR)/I51BaseTimer2W.moc.P $(DEPDIR)/RegisterBankAreaW.moc.P ./$(DEPDIR)/AssemblerSourceW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/BitAddressableAreaW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/BitChangeBreakpoint.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/DisassembleW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/ExternalW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseADConverterW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalFLASHW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalIRAMW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalROMW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseInternalXRAMW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseTimer2W.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/I51BaseW.Plo ./$(DEPDIR)/IOPortPin.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/InternalRAMW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/InternalXRAMW.Plo ./$(DEPDIR)/MiscW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/ProcessorsWC.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/ProcessorsWLib.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/RegisterBankAreaW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/RegsW.Plo ./$(DEPDIR)/RomW.Plo \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/SFRBitW.Plo ./$(DEPDIR)/SfrW.Plo
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libprocessorsW_la_SOURCES)
HEADERS = $(noinst_HEADERS)


#>- RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
#>- 	ps-recursive install-info-recursive uninstall-info-recursive \
#>- 	all-recursive install-data-recursive install-exec-recursive \
#>- 	installdirs-recursive install-recursive uninstall-recursive \
#>- 	check-recursive installcheck-recursive
#>+ 5
RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive nmcheck-recursive bcheck-recursive
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.in Makefile.am
DIST_SUBDIRS = $(SUBDIRS)
SOURCES = $(libprocessorsW_la_SOURCES)

#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/processorsW/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/processorsW/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/processorsW/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libprocessorsW.la: $(libprocessorsW_la_OBJECTS) $(libprocessorsW_la_DEPENDENCIES) 
	$(CXXLINK)  $(libprocessorsW_la_LDFLAGS) $(libprocessorsW_la_OBJECTS) $(libprocessorsW_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AssemblerSourceW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitAddressableAreaW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitChangeBreakpoint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DisassembleW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExternalW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/I51BaseADConverterW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/I51BaseInternalFLASHW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/I51BaseInternalIRAMW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/I51BaseInternalROMW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/I51BaseInternalXRAMW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/I51BaseTimer2W.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/I51BaseW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IOPortPin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InternalRAMW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InternalXRAMW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MiscW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ProcessorsWC.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ProcessorsWLib.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RegisterBankAreaW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RegsW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RomW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SFRBitW.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SfrW.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am \
	dvi-recursive info info-am info-recursive install install-am \
	install-data install-data-am install-data-recursive \
	install-exec install-exec-am install-exec-recursive \
	install-info install-info-am install-info-recursive install-man \
	install-recursive install-strip installcheck installcheck-am \
	installdirs installdirs-am installdirs-recursive \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am pdf-recursive ps ps-am ps-recursive tags \
	tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-recursive

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
I51BaseADConverterW.moc.cpp: $(srcdir)/I51BaseADConverterW.h
	$(MOC) $(srcdir)/I51BaseADConverterW.h -o I51BaseADConverterW.moc.cpp

#>+ 2
mocs: I51BaseADConverterW.moc.cpp

#>+ 3
SfrW.moc.cpp: $(srcdir)/SfrW.h
	$(MOC) $(srcdir)/SfrW.h -o SfrW.moc.cpp

#>+ 2
mocs: SfrW.moc.cpp

#>+ 3
ProcessorsWLib.moc.cpp: $(srcdir)/ProcessorsWLib.h
	$(MOC) $(srcdir)/ProcessorsWLib.h -o ProcessorsWLib.moc.cpp

#>+ 2
mocs: ProcessorsWLib.moc.cpp

#>+ 3
RomW.moc.cpp: $(srcdir)/RomW.h
	$(MOC) $(srcdir)/RomW.h -o RomW.moc.cpp

#>+ 2
mocs: RomW.moc.cpp

#>+ 3
I51BaseInternalIRAMW.moc.cpp: $(srcdir)/I51BaseInternalIRAMW.h
	$(MOC) $(srcdir)/I51BaseInternalIRAMW.h -o I51BaseInternalIRAMW.moc.cpp

#>+ 2
mocs: I51BaseInternalIRAMW.moc.cpp

#>+ 3
MiscW.moc.cpp: $(srcdir)/MiscW.h
	$(MOC) $(srcdir)/MiscW.h -o MiscW.moc.cpp

#>+ 2
mocs: MiscW.moc.cpp

#>+ 3
I51BaseInternalFLASHW.moc.cpp: $(srcdir)/I51BaseInternalFLASHW.h
	$(MOC) $(srcdir)/I51BaseInternalFLASHW.h -o I51BaseInternalFLASHW.moc.cpp

#>+ 2
mocs: I51BaseInternalFLASHW.moc.cpp

#>+ 3
RegsW.moc.cpp: $(srcdir)/RegsW.h
	$(MOC) $(srcdir)/RegsW.h -o RegsW.moc.cpp

#>+ 2
mocs: RegsW.moc.cpp

#>+ 3
DisassembleW.moc.cpp: $(srcdir)/DisassembleW.h
	$(MOC) $(srcdir)/DisassembleW.h -o DisassembleW.moc.cpp

#>+ 2
mocs: DisassembleW.moc.cpp

#>+ 3
I51BaseInternalXRAMW.moc.cpp: $(srcdir)/I51BaseInternalXRAMW.h
	$(MOC) $(srcdir)/I51BaseInternalXRAMW.h -o I51BaseInternalXRAMW.moc.cpp

#>+ 2
mocs: I51BaseInternalXRAMW.moc.cpp

#>+ 3
I51BaseW.moc.cpp: $(srcdir)/I51BaseW.h
	$(MOC) $(srcdir)/I51BaseW.h -o I51BaseW.moc.cpp

#>+ 2
mocs: I51BaseW.moc.cpp

#>+ 3
InternalRAMW.moc.cpp: $(srcdir)/InternalRAMW.h
	$(MOC) $(srcdir)/InternalRAMW.h -o InternalRAMW.moc.cpp

#>+ 2
mocs: InternalRAMW.moc.cpp

#>+ 3
I51BaseInternalROMW.moc.cpp: $(srcdir)/I51BaseInternalROMW.h
	$(MOC) $(srcdir)/I51BaseInternalROMW.h -o I51BaseInternalROMW.moc.cpp

#>+ 2
mocs: I51BaseInternalROMW.moc.cpp

#>+ 3
InternalXRAMW.moc.cpp: $(srcdir)/InternalXRAMW.h
	$(MOC) $(srcdir)/InternalXRAMW.h -o InternalXRAMW.moc.cpp

#>+ 2
mocs: InternalXRAMW.moc.cpp

#>+ 3
BitAddressableAreaW.moc.cpp: $(srcdir)/BitAddressableAreaW.h
	$(MOC) $(srcdir)/BitAddressableAreaW.h -o BitAddressableAreaW.moc.cpp

#>+ 2
mocs: BitAddressableAreaW.moc.cpp

#>+ 3
SFRBitW.moc.cpp: $(srcdir)/SFRBitW.h
	$(MOC) $(srcdir)/SFRBitW.h -o SFRBitW.moc.cpp

#>+ 2
mocs: SFRBitW.moc.cpp

#>+ 3
AssemblerSourceW.moc.cpp: $(srcdir)/AssemblerSourceW.h
	$(MOC) $(srcdir)/AssemblerSourceW.h -o AssemblerSourceW.moc.cpp

#>+ 2
mocs: AssemblerSourceW.moc.cpp

#>+ 3
ExternalW.moc.cpp: $(srcdir)/ExternalW.h
	$(MOC) $(srcdir)/ExternalW.h -o ExternalW.moc.cpp

#>+ 2
mocs: ExternalW.moc.cpp

#>+ 3
I51BaseTimer2W.moc.cpp: $(srcdir)/I51BaseTimer2W.h
	$(MOC) $(srcdir)/I51BaseTimer2W.h -o I51BaseTimer2W.moc.cpp

#>+ 2
mocs: I51BaseTimer2W.moc.cpp

#>+ 3
RegisterBankAreaW.moc.cpp: $(srcdir)/RegisterBankAreaW.h
	$(MOC) $(srcdir)/RegisterBankAreaW.h -o RegisterBankAreaW.moc.cpp

#>+ 2
mocs: RegisterBankAreaW.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  I51BaseADConverterW.moc.cpp SfrW.moc.cpp ProcessorsWLib.moc.cpp RomW.moc.cpp I51BaseInternalIRAMW.moc.cpp MiscW.moc.cpp I51BaseInternalFLASHW.moc.cpp RegsW.moc.cpp DisassembleW.moc.cpp I51BaseInternalXRAMW.moc.cpp I51BaseW.moc.cpp InternalRAMW.moc.cpp I51BaseInternalROMW.moc.cpp InternalXRAMW.moc.cpp BitAddressableAreaW.moc.cpp SFRBitW.moc.cpp AssemblerSourceW.moc.cpp ExternalW.moc.cpp I51BaseTimer2W.moc.cpp RegisterBankAreaW.moc.cpp

#>+ 2
KDE_DIST=Makefile.in 

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/processorsW/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/processorsW/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libprocessorsW_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/AssemblerSourceW.cpp $(srcdir)/BitAddressableAreaW.cpp $(srcdir)/BitChangeBreakpoint.cpp $(srcdir)/DisassembleW.cpp $(srcdir)/ExternalW.cpp $(srcdir)/I51BaseADConverterW.cpp $(srcdir)/I51BaseInternalFLASHW.cpp $(srcdir)/I51BaseInternalIRAMW.cpp $(srcdir)/I51BaseInternalROMW.cpp $(srcdir)/I51BaseInternalXRAMW.cpp $(srcdir)/I51BaseTimer2W.cpp $(srcdir)/I51BaseW.cpp $(srcdir)/IOPortPin.cpp $(srcdir)/InternalRAMW.cpp $(srcdir)/InternalXRAMW.cpp $(srcdir)/MiscW.cpp $(srcdir)/ProcessorsWC.cpp $(srcdir)/ProcessorsWLib.cpp $(srcdir)/RegisterBankAreaW.cpp $(srcdir)/RegsW.cpp $(srcdir)/RomW.cpp $(srcdir)/SFRBitW.cpp $(srcdir)/SfrW.cpp I51BaseADConverterW.moc.cpp SfrW.moc.cpp I51BaseInternalIRAMW.moc.cpp RomW.moc.cpp ProcessorsWLib.moc.cpp MiscW.moc.cpp I51BaseInternalFLASHW.moc.cpp RegsW.moc.cpp DisassembleW.moc.cpp I51BaseInternalXRAMW.moc.cpp I51BaseW.moc.cpp InternalRAMW.moc.cpp I51BaseInternalROMW.moc.cpp InternalXRAMW.moc.cpp BitAddressableAreaW.moc.cpp SFRBitW.moc.cpp AssemblerSourceW.moc.cpp ExternalW.moc.cpp I51BaseTimer2W.moc.cpp RegisterBankAreaW.moc.cpp 
	@echo 'creating libprocessorsW_la.all_cpp.cpp ...'; \
	rm -f libprocessorsW_la.all_cpp.files libprocessorsW_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libprocessorsW_la.all_cpp.final; \
	for file in AssemblerSourceW.cpp BitAddressableAreaW.cpp BitChangeBreakpoint.cpp DisassembleW.cpp ExternalW.cpp I51BaseADConverterW.cpp I51BaseInternalFLASHW.cpp I51BaseInternalIRAMW.cpp I51BaseInternalROMW.cpp I51BaseInternalXRAMW.cpp I51BaseTimer2W.cpp I51BaseW.cpp IOPortPin.cpp InternalRAMW.cpp InternalXRAMW.cpp MiscW.cpp ProcessorsWC.cpp ProcessorsWLib.cpp RegisterBankAreaW.cpp RegsW.cpp RomW.cpp SFRBitW.cpp SfrW.cpp I51BaseADConverterW.moc.cpp SfrW.moc.cpp I51BaseInternalIRAMW.moc.cpp RomW.moc.cpp ProcessorsWLib.moc.cpp MiscW.moc.cpp I51BaseInternalFLASHW.moc.cpp RegsW.moc.cpp DisassembleW.moc.cpp I51BaseInternalXRAMW.moc.cpp I51BaseW.moc.cpp InternalRAMW.moc.cpp I51BaseInternalROMW.moc.cpp InternalXRAMW.moc.cpp BitAddressableAreaW.moc.cpp SFRBitW.moc.cpp AssemblerSourceW.moc.cpp ExternalW.moc.cpp I51BaseTimer2W.moc.cpp RegisterBankAreaW.moc.cpp ; do \
	  echo "#include \"$$file\"" >> libprocessorsW_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libprocessorsW_la.all_cpp.final; \
	done; \
	cat libprocessorsW_la.all_cpp.final libprocessorsW_la.all_cpp.files > libprocessorsW_la.all_cpp.cpp; \
	rm -f libprocessorsW_la.all_cpp.final libprocessorsW_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libprocessorsW_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libprocessorsW_la_OBJECTS="$(libprocessorsW_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libprocessorsW_la_OBJECTS="$(libprocessorsW_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libprocessorsW_la_OBJECTS="$(libprocessorsW_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libprocessorsW_la_OBJECTS="$(libprocessorsW_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 3
nmcheck: 
nmcheck-am: nmcheck
