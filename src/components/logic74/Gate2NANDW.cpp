/***************************************************************************
*   Copyright (C) 2008 by Heikki Pulkkinen   *
*   heikki@localhost   *
*                                                                         *
*   This program is free software; you can redistribute it and/or modify  *
*   it under the terms of the GNU General Public License as published by  *
*   the Free Software Foundation; either version 2 of the License, or     *
*   (at your option) any later version.                                   *
*                                                                         *
*   This program is distributed in the hope that it will be useful,       *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
*   GNU General Public License for more details.                          *
*                                                                         *
*   You should have received a copy of the GNU General Public License     *
*   along with this program; if not, write to the                         *
*   Free Software Foundation, Inc.,                                       *
*   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
***************************************************************************/
#include "Gate2NANDW.h"

Gate2NANDW::Gate2NANDW(QWidget* parent, char const * name, int wflags, unsigned int const  componentNumber, unsigned int const  componentType) : Logic74BaseW(parent, name, wflags, componentNumber, componentType)
{
	componentName_+=" 2 Input NAND Gate ";
	delayTimeTyp_=DELAYTIME;

	loadComponentXPMImage();
	componentImageQLabel_->setPixmap(componentImage_);

	//Input pins
	addInputPin(PINNAME_1A);
	addInputPin(PINNAME_1B);
	addOutputPin(PINNAME_1Y);

	pTo1APin_=ioList_.pToPin(PINNAME_1A);
	pTo1BPin_=ioList_.pToPin(PINNAME_1B);
	pTo1YPin_=ioList_.pToPin(PINNAME_1Y);

	initW(); //

}

Gate2NANDW::~Gate2NANDW()
{

}

bool Gate2NANDW::logic2Operation(IOPin* inA, IOPin* inB)
{
	if(inA->readValue(true)&&inB->readValue(true))
		return false;
	else
		return true;
}

void Gate2NANDW::execute_VirtualPart_ExecuteInputChange_ExecutionReady_VirtualPart(void)
{
	pTo1YPin_->writeValue(logic2Operation(pTo1APin_, pTo1BPin_),true);
}

void Gate2NANDW::loadComponentXPMImage(void)
{
/* XPM */
static char const  *logicXPM[]={
"105 40 7 1",
"# c #993333",
"c c #996666",
"b c #cc6666",
"e c #cc9999",
"d c #cccccc",
"a c #ffcccc",
". c #ffffff",
".........................................................................................................",
"..................................#####################################d.................................",
"..................................#eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..............abccbd..............#d.................................",
"###################################d..............cceeee..............#d................#################",
"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee#d.............e#a..................#d................#eeeeeeeeeeeeeeee",
"..................................#d.............e#a..................##d...............#d...............",
"..................................#d..............cb..................###d..............#d...............",
"..................................#d.............ac#e.................#d##d.............#d...............",
"..................................#d............aced#e...ec...........#d.##d............#d...............",
"..................................#d............ec..d#e..eb...........#d..##d...........#d...............",
"..................................#d............cb...e#e.ce...........#d...##d..........#d...............",
"..................................#d............cb....e#cc............#d....##d.........#d...............",
"..................................#d............e#d....b#e............###################d...............",
"..................................#d.............c#eeebcb#e...........#eeeeeeeeeeeeeeeeeed...............",
"..................................#d..............ecccea.b#d..........#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"###################################d..................................#d.................................",
"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#d..................................#d.................................",
"..................................#####################################d.................................",
"..................................eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed.................................",
"........................................................................................................."};

	componentImage_=QPixmap(logicXPM);

}

